name: "TMS k8s deply"
description: "Deploy docker image to k8s"
inputs:
  tag:
    description: 'docker tag'
    required: true
  azure-container-registry:
    description: 'azure cr registry'
    required: true
  namespace:
    description: 'k8s namespace'
    required: true
  github-token:
    required: true
  github-org:
    required: true
  github-repo:
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        repository: ${{ inputs.github-org }}/${{ inputs.github-repo }}
        ref: 'main'
        token: ${{ inputs.github-token }}
    
    - name: Set Docker tag        
      run: |
        SHORT_SHA=$(git rev-parse --short HEAD)
        if [[ "${{ github.event_name }}" == "release" ]]; then
          TAG="${{ github.event.release.tag_name }}"
        elif [[ "${{ github.event_name }}" == "pull_request" ]]; then
          TAG="pr-${{ github.event.pull_request.number }}-${SHORT_SHA}"
        else
          TAG="main-${SHORT_SHA}"
        fi
        echo "DOCKER_TAG=$TAG" >> $GITHUB_ENV
      shell: bash
      
    - name: "k8s deploy"      
      shell: bash
      run: |
        cd ${{ inputs.namespace }}/${{ github.event.repository.name }}
        yq -i '.image = "${{ inputs.azure-container-registry }}/${{ github.event.repository.name }}:${{ end.DOCKER_TAG }}"' values.yaml
        cd ../..
        git config --global user.name 'Git bot'
        git config --global user.email 'bot@noreply.github.com'
        git remote set-url origin https://x-access-token:${{ inputs.github-token }}@github.com/${{ inputs.github-org }}/${{ inputs.github-repo }}
        git commit -am "Update image name" && git push || echo "No changes to commit"
    
